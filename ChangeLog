TODO
* fsntfsinfo
  - move UsnJrnl to separate tool?
  - fix remnant data in buffer and remove work around
* implement UsnJrnl parsing
  - move UsnJrnl parsing into library ?
* data streams return the offset ranges?
* add stand-alone MTF parsing support
* change MFT entry flags value checks to named definitions

* API
  - expose object identifier attribute
  - expose reparse point attribute
  - expose logged utility stream attribute

* pyfsntfs: add sub file entries iterator to file entry

* attribute list
  - check if multiple $DATA attributes with the same name are merged
* attribute data parsing
  - add SSIZE_MAX check for attribute->data_size before (size_t) cast
* MFT entry
  - add support for short file name
  - add support for multiple $FILE_NAME entries
* file entry fallback to short file name if no long
* move directory entry btree into index ?
* merge i30_index and alternate_index_array

* fsntfsinfo sanitize control characters in filenames
* cached approach of reading attributes ?

* fsntfsinfo: add detection of BDE and VSS
* add support for other values of sectors_per_cluster_block, seen 8, 128
* add support for other values of index_entry_size, seen 1, 244
* complete libcdata integration
* fix issue on win2k image
  - stack overflow infinite loop
  - determine MFT entry index based on offset
    do not rely on value in structure

* update libfsntfs.c
* MFT entry create get data segment function
  for internal usage

* how to handle named index roots e.g. $ObjId:$O, $Quota:$O
* fsntfs
  - add offset option
* code clean up
  - goto on error
* fix issue with bounded MFT entry cache
* analyze MARKER
* support MFT entry 0 consisting of multiple $DATA attributes
  - add segment support to ntfs attribute data reference

* file_entry: clone directory entry ?
* what about ADS support ?
  - todo read from ads
* change libfsntfs_attribute_reference_append_attribute into insert and sort
  attribute ranges

* add function to retrieve MFT entry by index
* check if check_signature function uses the right offset
* refactor: libfsnt_array_append_entry in index ?

* data runs block
  - create libfdata block IO handle
  - separate segment size and data size ?
  - what about sparse and compressed blocks ?

* move get mft entry to file entry initialize ?
  - clone mft entry in file entry initialize (for now the mft entry cache
  contains a slot for every entry)
* implement file entry
  - add functions to include file
  - add functions to manual

* move volume header from io handle to separate object ?

Format:
* index
  - group equivalent index data values
* boot block
  - remove value restriction add sanity check
* data runs
  - add a check to see if data run sizes add up
  - add support for compressed and/or sparse data runs
* add support for attributes:
  - attribute list (ATTRIBUTE_LIST) (partial)
  - volume name (VOLUME_NAME) (partial)
  - volume information (VOLUME_INFORMATION) (partial)
  - add index support (INDEX_ROOT, INDEX_ALLOCATION) (partial)
  - add bitmap support (BITMAP) (partial)
  - reparse point (REPARSE_POINT) (partial)
  - logged utillity stream (LOGGED_UTILITY_STREAM) (partial)
* file entry
  - add data support (DATA)
    - add sparse data range support to libfdata
  - add directory entry support (requires index support)
  - add STANDARD_INFORMATION support (partial)
  - add FILE_NAME support (partial)
  - add OBJECT_ID support
* pre NTFS 3.0 attribute types
  - volume version
* filenames
  - ignoring DOS filenames for now

Runtime index:
* name
* attribute type
* node/value tree
* bitmap ?

API:
* expose file (MFT) attribute
  - add function to retrieve attribute based on attribute type
* add functions
  - to retrieve volume name
  - to retrieve (volume) file system version
  - to retrieve reparse point data
  - to retrieve MFT entry by index

Tools:
* fsntfsinfo
  - print ADS
  - add option to print update journal entries

Performance:
* compact attribute union data/file reference (use type to distinguish between
  them)

Debug:
* print mft entry flags
* print volume information flags description
* print reparse point tag description
* print reparse point data

Deployment
* check configure test of sub library included functions
* write man pages

20141226
* updated dpkg files

20141225
* worked on Python 3 support

20141130
* code clean up

20141124
* worked on $UsnJrnl support
* added API functions to retrieve:
  - file entry allocation status
  - $FILE_NAME attribute name string
  - $FILE_NAME attribute parent file reference

20141116
* small fixes

20141028
* changes for deployment
* bug fix in Python-bindings

20141022
* changes for deployment

20141011
* updated dependencies
* changes for project site move

20141004
* removed README.macosx

20140810
* worked on exposing the attributes

20140809
* worked on data streams support
* worked on exposing the attributes

20140808
* worked on data streams support

20140803
* bug fix in Python-bindings

20140628
* Worked on format support

20140530
* Worked on Python bindings

20140529
* updated dependencies
* Worked on Python bindings

20140417
* small changes

20140318
* worked on non-resident attribute list support

20140207
* worked on libfdata refactor

20140206
* worked on libfdata refactor

20140205
* worked on libfdata refactor

20140204
* worked on libfdata refactor

20140203
* worked on libfdata refactor

20140119
* worked on libfdata refactor

20140118
* 2014 update
* updated dependencies
* worked on libfdata refactor

20131109
* updated dependencies

20130915
* code clean up

20130914
* updated dependencies
* added libcthreads build support

20130224
* updated dependencies
* 2013 update

20120929
* updated dependencies

20120821
* improve NTFS version 3.0 support

20120820
* applied update
* improved reading MFT attribute lists and data MFT entries

20120526
* worked on MFT read and seek data functions

20120520
* 2012 update
* updated dependencies
* added libfusn
* fsntfsinfo:
  - added info handle

20111125
* code clean up
* added support for empty volume name

20111124
* removed libvshadow
* updated configure.ac and m4 scripts
* added include/codepage.h
* updated common, array type
* updated libcstring, libsystem, libuna, libfdata, libfdatetime, libfguid,
  libfwnt
* added libfcache
* code clean up

20110510
* update libvshadow

20110509
* dist fixes

20110508
* updated configure.ac
* updated libcstring, libsystem, libuna, libbfio, libfdata, libfguid

20110309
* small changes

20110308
* small changes

20110306
* worked on support for MFT consisting of multiple data runs

20110305
* updated configure, common, array type, libcstring, liberror, libnotify,
  libsystem, libuna, libbfio, libfdata, libfdatetime, libfguid, libfwnt
* 2011 update

20101216
* updated Makefile

20101214
* updated configure/Makefile

20101209
* added missing MFT entry flags debug output
* code clean up
* added initial gettext support
* updated common, libfdatetime

20101203
* updated common, array type, liberror, libnotify, libsystem, libuna, libbfio,
  libfdata

20101129
* worked on txf data

20101128
* worked on txf data

20101127
* updated libfdatetime
* moved abort to IO handle
* worked on txf data

20101126
* worked on support for multiple index allocation attributes

20101125
* worked on support for multiple index allocation attributes
* updated libuna, libbfio, libfdata

20101124
* updated configure, libcstring, liberror, libbfio
* worked on support for an attribute list

20101113
* textual changes

20101112
* renamed library to libfsntfs

20101110
* worked on winsxs support

20101109
* worked on logged utility stream
* updated include/error.h
* updated libfdata, liberror, libbfio, libnotify, libsystem
* added support for directory index that only consists of index root attribute
* fixed bug in fsntinfo
* added support for directory index that has root and empty allocation index
  attributes

20100912
* worked on reading attribute list
* updated libbfio

20100911
* improved handling data runs

20100910
* worked on reading directory entries

20100909
* worked on reading directory entries

20100908
* worked on file entry functions
* worked on reading directory entries
* added debug print of file name attribute namespace description

20100907
* worked on reading directory entries

20100906
* worked on reading indexes

20100905
* worked on reading indexes
* worked on data runs

20100904
* worked on attributes
* worked on reading indexes
* worked on fixup values

20100903
* worked on mft attribute
* updated libbfio, libfdata
* worked on file entry API functions
* added libfguid for $OBJECT_ID attribute
* worked on attributes

20100828
* worked on reading a MFT entry and attributes

20100827
* worked on reading a MFT entry and attributes
* added debug print of file attribute flag description
* added debug print of mft attribute type description

20100826
* worked on reading a MFT entry and attributes

20100825
* initial version

